import{RenderTarget as c}from"framer";import{useEffect as o}from"react";class i{storageKey="quote-cart";listeners={};addListener(t,e){this.listeners[t]?this.listeners[t].push(e):this.listeners[t]=[e]}removeListener(t,e){this.listeners[t]&&(this.listeners[t]=this.listeners[t].filter(s=>s!==e))}dispatchEvent(t,e){if(this.listeners[t])for(const s of this.listeners[t])s(e)}get items(){try{return JSON.parse(localStorage.getItem(this.storageKey))||[]}catch{return[]}}set items(t){try{localStorage.setItem(this.storageKey,JSON.stringify(t))}catch(e){console.warn("Cart failed to store items",e)}}addItem(t){console.log("add item",t),this.items.findIndex(s=>s.key===t.key)==-1&&(this.items=[...this.items,t]),this.dispatchEvent("#"+t.key,t),this.dispatchEvent("change",this.items)}removeItem(t){console.log("remove item",t),this.items=this.items.filter(e=>e.key!==t),this.dispatchEvent("#"+t),this.dispatchEvent("change",this.items)}containsItem(t){return this.items.some(e=>e.key===t)}getItem(t){return this.items.find(e=>e.key===t)}updateItemCount(t,e){console.log("update item",t,e);const s=this.items.findIndex(a=>a.key===t);if(s===-1)return;const r=this.items[s],m=r.count+e;if(m<1){this.removeItem(r.key);return}const g={...r,count:m};this.items=this.items.map(a=>a.key===r.key?g:a),this.dispatchEvent("#"+r.key,g),this.dispatchEvent("change",this.items)}clear(){localStorage.removeItem(this.storageKey),this.dispatchEvent("change",this.items)}static t;static get Instance(){return i.t||(i.t=new i),this.t}}const h={isInCanvas:()=>c.current()!==c.preview,useOnChange:n=>{o(()=>{if(!h.isInCanvas())return n(i.Instance.items),i.Instance.addListener("change",n),()=>{i.Instance.removeListener("change",n)}},[])},useOnItemChange:(n,t)=>{o(()=>{if(!(!t||h.isInCanvas())){if(t){const e=i.Instance.items.find(s=>s.key===t);n(e)}return i.Instance.addListener("#"+t,n),()=>{i.Instance.removeListener("#"+t,n)}}},[t])}};export{i as Cart,h as Funcs};